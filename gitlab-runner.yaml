architecture: amd64

actions:
  - action: debootstrap
    suite: bookworm
    components:
      - main
    mirror: https://deb.debian.org/debian

  # Set up the sources list with sources for gitlab-runner and security updates
  # enabled.
  - action: overlay
    source: assets/apt

  # Install security updates for packages installed by debootstrap.
  - action: run
    chroot: true
    command: apt-get update && apt-get --yes --quiet dist-upgrade

  # Install a kernel image and systemd-resolved
  - action: apt
    packages:
      - linux-image-amd64
      - systemd-resolved
      - zstd

  # Provide a root shell on /dev/ttyS1
  - action: overlay
    source: assets/getty

  - action: run
    chroot: true
    command: systemctl enable serial-getty@ttyS1.service

  # Configure the virtual network interface
  - action: overlay
    source: assets/network

  - action: run
    chroot: true
    command: systemctl enable systemd-networkd

  # Install the gitlab runner application and docker
  - action: apt
    packages:
      - apparmor
      - ca-certificates
      - cdebootstrap
      - docker.io
      - git
      - gitlab-runner
      - xz-utils

  # Configure the GitLab runner and its logging
  - action: overlay
    source: assets/gitlab-runner

  # Fill in config/secrets from the commandline
  - action: run
    chroot: true
    command: |
      sed -i "s|GITLAB_URL|{{ .gitlab_url }}|" /etc/gitlab-runner/config.toml
      sed -i "s|GITLAB_TOKEN|{{ .gitlab_token }}|" /etc/gitlab-runner/config.toml
      sed -i "s|LAVA_URL|{{ .lava_url }}|" /etc/gitlab-runner/lavacli.yaml
      sed -i "s|LAVA_TOKEN|{{ .lava_token }}|" /etc/gitlab-runner/lavacli.yaml
      sed -i "s|LAVA_USERNAME|{{ .lava_username }}|" /etc/gitlab-runner/lavacli.yaml

  # Remove the package list. The image should not be used interactively.
  # Maintenance should instead be performed by generating a new image instead.
  - action: run
    chroot: true
    command: rm -rf /var/lib/apt/lists/*

  # Copy out the initrd and kernel so they can be used with the qemu -kernel
  # and -initrd arguments.
  - action: run
    command: cp "${ROOTDIR}/boot/initrd.img"* "${ROOTDIR}/boot/vmlinuz"* "${ARTIFACTDIR}"

  # Generate an ext4 image from the root filesystem for use as /dev/vda image
  # without a partition table etc.
  - action: run
    command: mke2fs -d "${ROOTDIR}" -L root "${ARTIFACTDIR}/gitlab-runner.rootfs.ext4" 4G
